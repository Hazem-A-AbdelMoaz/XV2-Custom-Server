<?xml version="1.0" encoding="utf-8" ?>
<EternityPatchFile name="NewChara" enabled="new_chara" comment="This file enables the new characters patch">

<!-- The group of patches to make new slots are divided into two main parts. -->

<!-- Part1: patching the comunication with the ActionScript3 

The native and AS3 communicate with each other using a documented standard way (ActionScript external interface)
There are communications in both ways, native->as3 and as3->native

The native->as3 communication is done through a buffer (in the AS3 side) which has a default size of 5194 bytes (0x144A)
The native part passes the index of the buffer, and the value to set (more or less).
Each part of the buffer fulfills a role, which can be seen in the ReceiveType_* variables in CharaSele.as

The first part of the patch takes place mostly in the .dll, as things need to be computed at run time. The xml role here
will be to just find the patches.

These patches consist in patching several calls to the most high level routines that communicate the data to the as3 side 
(thsese routine are methods of some parent class of the native "chasel" object). In the very first exe version, these routines 
has an address of +0x2B4A10 and +0x2B4950
The patches consist in fixing the indexes to match the new layout after CharacterMax change. 
Also, the size must be patched.

-->
	<!-- Signature updated in 1.10v2 -->
	<Patch name="PatchReceiveTypeKey" type="hook" search_start="0x52E1D8" comment="Takes place in chasel_func14" >
		<Instruction code="4C 8B C3" comment="mov r8, rbx" />
		<Instruction code="8D 97 90 10 00 00" comment="lea edx, [rdi+1090h]" />
		<Instruction code="49 8B CE" comment="mov rcx, r14" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method" />
		<Instruction code="E9 07020000" comment="jmp +0x207" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeKey" setup="CharaSetup" />
	</Patch>
	
	<!-- Signature updated in 1.10v2 -->
	<Patch name="PatchReceiveTypeKey2" type="hook" search_start="0x52E401" comment="Takes place in chasel_func14" >
		<Instruction code="4C 8B C3" comment="mov r8, rbx" />
		<Instruction code="8D 97 90 10 00 00" comment="lea edx, [rdi+1090h]" />
		<Instruction code="49 8B CE" comment="mov rcx, r14" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method" />
		<Instruction code="FF C7" comment="inc edi" />
		<Instruction code="48 83 C3 20" comment="add rbx, 20h" />
		<Instruction code="49 83 C7 04" comment="add r15, 4" />		
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeKey" />
	</Patch>	
	
	<!-- Signature updated in 1.14 -->
	<Patch name="PatchReceiveTypeCharaSelected" type="hook" search_start="0x56117B" comment="Takes place in chasel_func7" >
		<Instruction code="44 8B C0" comment="mov r8d, eax" />
		<Instruction code="8D 96 A8 10 00 00" comment="lea edx, [rsi+10A8h]" />
		<Instruction code="48 8B CD" comment="mov rcx, rbp" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="48 8B 0D XXXXXXXX" comment="mov rcx, cs:XXXXXXXX" />
		<Instruction code="83 CA FF" comment="or edx, -1" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeCharaSelected" setup="AS3Send2Setup"/>
	</Patch>
	
	<!-- Signature updated in 1.14 -->
	<!-- Note: two matches, one in chasel_func7 and other in chasel_func10  (the "matches" attribute replace the need of the old PatchReceiveTypecharaVariation3 patch, which has been removed) -->
	<Patch name="PatchReceiveTypeCharaVariation" type="hook" search_start="0x5611C6" matches="2" comment="Takes place in chasel_func7 and chasel_func10">
		<Instruction code="44 8B C0" comment="mov r8d, eax" />
		<Instruction code="8D 93 28 11 00 00" comment="lea edx, [rbx+1128h]" />
		<Instruction code="48 8B CD" comment="mov rcx, rbp" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="FF C3" comment="inc ebx" />
		<Instruction code="83 FB 20" comment="cmp ebx, 20h" />
		<Instruction code="7C C2" comment="jmp -" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeVariation" />
	</Patch>
	
	<!-- Signature updated in 1.10v2 -->
	<Patch name="PatchReceiveTypeSkillName" type="hook" search_start="0x530E16" comment="Takes place in chasel_func4" >
		<Instruction code="4C 8B C3" comment="mov r8, rbx" />
		<Instruction code="41 8D 96 9E 10 00 00" comment="lea edx, [r14+109Eh]" />
		<Instruction code="48 8B CF" comment="mov rcx, rdi" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method" />
		<Instruction code="41 FF C6" comment="inc r14d" />
		<Instruction code="49 83 C5 20" comment="add r13, 20h" />
		<Instruction code="48 83 C3 20" comment="add rbx, 20h" />
		<Instruction code="49 83 C4 04" comment="add r12, 4" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeSkillName" />
	</Patch>
	
	<!-- Signature updated in 1.14 -->
	<Patch name="PatchReceiveTypeCharaVariation2" type="hook" search_start="0x561F07" comment="Takes place in chasel_func4" >
		<Instruction code="44 8B C0" comment="mov r8d, eax" />
		<Instruction code="8D 96 28 11 00 00" comment="lea edx, [rsi+1128h]" />
		<Instruction code="48 8B CF" comment="mov rcx, rdi" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="FF C6" comment="inc esi" />
		<Instruction code="83 FE 20" comment="cmp esi, 20h" />
		<Instruction code="7C C1" comment="jmp -" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeVariation" />
	</Patch>
	
	<!-- Signature is 1.10v2 -->
	<Patch name="PatchReceiveTypeImageStr" type="hook" search_start="0x530FD7" comment="Takes place in chasel_func5." >
		<Instruction code="4D 8B 00" comment="mov r8, [r8]" />
		<Instruction code="41 8D 56 10" comment="lea edx, [r14+10h]" />		
		<Instruction code="48 8B CE" comment="mov rcx, rsi" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method" />
		<Instruction code="48 8B 5C 24 40" comment="mov rbx, [rsp+40h]" />
		<Instruction code="48 8B 6C 24 48" comment="mov rbp, [rsp+48h]" />
		<Instruction code="48 8B 74 24 50" comment="mov rsi, [rsp+50h]" />
		<Instruction code="48 8B 7C 24 58" comment="mov rdi, [rsp+58h]" />
		<Instruction code="48 83 C4 30" comment="add rsp, 30h" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeImageStr" />
	</Patch>
	
	<!-- Signature updated in 1.14 -->
	<Patch name="PatchReceiveTypeCharaSelected2" type="hook" search_start="0x56124E" comment="Takes place in chasel_func_N1." >
		<Instruction code="44 8B C0" comment="mov r8d, eax" />
		<Instruction code="8D 96 A8 10 00 00" comment="lea edx, [rsi+10A8h]" />
		<Instruction code="48 8B CD" comment="mov rcx, rbp" />
		<Instruction code="48 8B 5C 24 30" comment="mov rbx, [rsp+30h]" />
		<Instruction code="48 8B 6C 24 38" comment=" mov rbp, [rsp+38h]" />
		<Instruction code="48 8B 74 24 40" comment="mov rsi, [rsp+40h]" />
		<Instruction code="48 83 C4 20" comment="add rsp, 20h" />
		<Instruction code="5F" comment="pop rdi" />
		<Instruction code="E9 XXXXXXXX" comment="jmp send_method2" />
		
		<Hook type="call" inst_index="8" value="PatchReceiveTypeCharaSelected" />
	</Patch>
	
	<!-- This patch is new in 1.04.1 Signature updated in 1.10v2-->
	<Patch name="PatchReceiveTypeDLCUnlockFlag" type="hook" search_start="0x53126A" comment="Takes place in chasel_func13." >
		<Instruction code="44 8B C0" comment="mov r8d, eax" />
		<Instruction code="BA 48 11 00 00" comment="mov edx, 1148h" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 BC 90 10 00 00" comment="mov r12, 1090h" />
		<Instruction code="48 8D 3D XXXXXXXX" comment="lea rdi, XXXXXXXXXX" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeDLCUnlockFlag" />
	</Patch>
	
	<!-- This patch is new in 1.04.1 Signature updated in 1.10v2-->
	<Patch name="PatchReceiveTypeKey3" type="hook" search_start="0x5313D8" comment="Takes place in chasel_func13. r12d initial value 0x1090 in 1.10v2+." >
		<Instruction code="4C 8B C3" comment="mov r8, rbx" />
		<Instruction code="41 8B D4" comment="mov edx, r12d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method" />
		<Instruction code="41 FF C4" comment="inc r12d" />		
		<Instruction code="48 83 C3 20" comment="add rbx, 20h" />
		<Instruction code="48 83 C7 04" comment="add rdi, 4" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeKey" />
	</Patch>
	
	<!-- This patch is new in 1.04.1 Signature updated in 1.10v2-->
	<Patch name="PatchReceiveTypeImageStrNpc" type="hook" search_start="0x53109C" comment="Takes place in chasel_func13_ex." >
		<Instruction code="4D 8B 00" comment="mov r8, [r8]" />
		<Instruction code="8D 95 A6 10 00 00" comment="lea edx, [rbp+10A6h]" />
		<Instruction code="48 8B CF" comment="mov rcx, rdi" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method" />
		<Instruction code="48 8B 5C 24 40" comment="mov rbx, [rsp+40h]" />
		<Instruction code="48 8B 6C 24 48" comment="mov rbp, [rsp+48h]" />
		<Instruction code="48 8B 74 24 50" comment="mov rsi, [rsp+50h]" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeImageStrNpc" />
	</Patch>
	
	<!-- This patch added in 1.05. Signature is 1.15 -->
	<Patch name="PatchReceiveTypeUseCustomList" type="hook" search_start="0x57D445" comment="Takes place in chasel_func13" >
		<Instruction code="BA 4C 2B 00 00" comment="mov edx, 2B4Ch" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="41 83 BF E8 17 00 00 00" comment="cmp dword ptr [r15+17E8h], 0" />
		<Instruction code="0F 84 D0 00 00 00" comment="jz +0xD0" />
		<Instruction code="49 8B 9F 90 03 00 00" comment="mov rbx, [r15+390h]" />
		<Instruction code="49 2B 9F 88 03 00 00" comment="sub rbx, [r15+388h]" />
		<Instruction code="48 C1 FB 04" comment="sar rbx, 4" />		
		<Instruction code="41 B8 01 00 00 00" comment="mov r8d, 1" />		
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />		
		
		<Hook type="call" inst_index="8" value="PatchReceiveTypeUseCustomList" />
	</Patch>
	
	<!-- This patch added in 1.05. Signature updated in 1.15 -->
	<Patch name="PatchReceiveTypeUseCustomList2" type="hook" search_start="0x57D523" comment="Takes place in chasel_func13. edx is 2B4C" >
		<Instruction code="0F 8C 77 FF FF FF" comment="jl -89" />
		<Instruction code="EB 08" comment="jmp +8" />		
		<Instruction code="45 33 C0" comment="xor r8d, r8d" />		
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="45 33 C0" comment="xor r8d, r8d" />		
				
		<Hook type="call" inst_index="3" value="PatchReceiveTypeUseCustomList" />
	</Patch>
	
	<!-- This patch added in 1.05. Signature is 1.15 -->
	<Patch name="PatchReceiveTypeCustomListNum" type="hook" search_start="0x57D478" comment="Takes place in chasel_func13" >
		<Instruction code="44 8B C3" comment="mov r8d, ebx" />
		<Instruction code="BA 4D 2B 00 00" comment="mov edx, 2B4Dh" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 63 F3" comment="movsxd r14, ebx" />
		<Instruction code="85 DB" comment="test ebx, ebx" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveTypeCustomListNum" />
	</Patch>
	
	<!-- This patch added in 1.05. Signature updated in 1.15 -->
	<Patch name="PatchReceiveType_CustomList_CID_Start" type="hook" search_start="0x57D4BC" comment="Takes place in chasel_func13. initial edi=0x2C4E. initial edi-0x100=0x2B4E" >
		<Instruction code="8D 97 00 FF FF FF" comment="lea edx, [rdi-100h]" />
		<Instruction code="4C 8B C0" comment="mov r8, rax" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="49 8B 87 88 03 00 00" comment="mov rax, [r15+388h]" />
		
		<Hook type="call" inst_index="3" value="PatchReceiveType_CustomList_CID_Start" setup="AS3Send3Setup" />
	</Patch>
	
	<!-- This patch added in 1.05. Signature updated in 1.15 -->
	<Patch name="PatchReceiveType_CustomList_MID_Start" type="hook" search_start="0x57D4CD" comment="Takes place in chasel_func13. initial edi=0x2A4E" >
		<Instruction code="49 8B 87 88 03 00 00" comment="mov rax, [r15+388h]" />
		<Instruction code="44 8B 44 18 04" comment="mov r8d, [rax+rbx+4]" />
		<Instruction code="8B D7" comment="mov edx, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="49 8B 87 88 03 00 00" comment="mov rax, [r15+388h]" />
		
		<Hook type="call" inst_index="4" value="PatchReceiveType_CustomList_MID_Start" />
	</Patch>
	
	<!-- This patch added in 1.05. Signature updated in 1.15 -->
	<Patch name="PatchReceiveType_CustomList_PID_Start" type="hook" search_start="0x57D4E3" comment="Takes place in chasel_func13. initial edi=0x2A4E. initial edi+0x100=0x2B4E" >
		<Instruction code="49 8B 87 88 03 00 00" comment="mov rax, [r15+388h]" />
		<Instruction code="8D 97 00 01 00 00" comment="lea edx, [rdi+100h]" />
		<Instruction code="44 8B 44 18 08" comment="mov r8d, [rax+rbx+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="49 8B 87 88 03 00 00" comment="mov rax, [r15+388h]" />
		
		<Hook type="call" inst_index="4" value="PatchReceiveType_CustomList_PID_Start" />
	</Patch>
	
	<!-- This patch added in 1.09. Signature updated in 1.15 -->
	<Patch name="PatchReceiveType_CustomList_PartnerJudge_Start" type="hook" search_start="0x57D4FD" comment="Takes place in chasel_func13. initial edi=0x2A4E. initial edi+0x200=0x2C4E" >
		<Instruction code="49 8B 87 88 03 00 00" comment="mov rax, [r15+388h]" />
		<Instruction code="8D 97 00 02 00 00" comment="lea edx, [rdi+200h]" />
		<Instruction code="44 8B 44 18 0C" comment="mov r8d, [rax+rbx+0Ch]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="FF C7" comment="inc edi" />
		<Instruction code="48 FF C6" comment="inc rsi" />
		
		<Hook type="call" inst_index="4" value="PatchReceiveType_CustomList_PartnerJudge_Start" />
	</Patch>
	
	<!-- This patch added in 1.08. Signature updated in 1.10v2-->
	<Patch name="PatchJoyConSingleFlag" type="hook" search_start="0x531723" comment="Takes place in chasel_func13" >
		<Instruction code="45 33 C0" comment="xor r8d, r8d" />
		<Instruction code="BA 49 11 00 00" comment="mov edx, 1149h" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="90" comment="nop" />
		<Instruction code="48 8B 4D B8" comment="mov rcx, [rbp-48h]" />
				
		<Hook type="call" inst_index="3" value="PatchJoyConSingleFlag" />
		
	</Patch>
	
	<!-- Signature updated in 1.10v2 -->
	<Patch name="PatchReceiveTypeUnlockVar" type="hook" search_start="0x531881" comment="Takes place in chasel_func6" >
		<Instruction code="44 8B C0" comment="mov r8d, eax" />
		<Instruction code="8D 93 90 00 00 00" comment="lea edx, [rbx+90h]" />
		<Instruction code="48 8B CF" comment="mov rcx, rdi" />
		<Instruction code="48 8B 5C 24 30" comment="mov rbx, [rsp+30h]" />
		<Instruction code="48 83 C4 20" comment="add rsp, 20h" />
		<Instruction code="5F" comment="pop rdi" />
		<Instruction code="E9 XXXXXXXX" comment="jmp send_method2" />
		
		<Hook type="call" inst_index="6" value="PatchReceiveTypeUnlockVar" />
	</Patch>
	
	<!-- This patch added in 1.09. Signature updated in 1.15 -->
	<Patch name="PatchReceiveType_CostumeNum" type="hook" search_start="0x57C1F5" comment="Takes place in chasel_cc" >
		<Instruction code="BA 4A 11 00 00" comment="mov edx, 114Ah" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="49 8B 8F 78 03 00 00" comment="mov rax, [r15+378h]" />
		<Instruction code="48 8B C3" comment="mov rax, rbx" />
		<Instruction code="49 2B 8F 70 03 00 00" comment="sub rcx, [r15+370h]" />

		<Hook type="call" inst_index="1" value="PatchReceiveType_CostumeNum" />
	</Patch>
	
	<!-- The following 13 patches addded in 1.09, (except the 3 latest ones, added in 1.10v2, 1.14 and 1.15), and share same signature. Signature updated in 1.15 -->
	<Patch name="PatchReceiveType_CharacterTableStart" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="5" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart2" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="9" value="PatchReceiveType_CharacterTableStart2" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart3" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="13" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart4" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="17" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart5" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="21" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart6" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="25" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart7" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="29" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart8" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="33" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart9" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="37" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart10" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="41" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart11" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="45" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart12" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="49" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<Patch name="PatchReceiveType_CharacterTableStart13" type="hook" search_start="0x57C247" comment="Takes place in chasel_cc. initial r14=0x114C" >
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="44 8B 06" comment="mov r8d, [rsi]" />
		<Instruction code="41 8D 56 FF" comment="lea edx, [r14-1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="8B F8" comment="mov edi, [eax]" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="4C 8D 46 04" comment="lea r8, [rsi+4]" />
		<Instruction code="41 8B D6" comment="mov edx, r14d" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method3" />
		<Instruction code="44 0F BF 46 08" comment="movsx r8d, word ptr [rsi+8]" />
		<Instruction code="41 8D 56 01" comment="lea edx, [r14+1]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0A" comment="movsx r8d, word ptr [rsi+0Ah]" />
		<Instruction code="41 8D 56 02" comment="lea edx, [r14+2]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0C" comment="movsx r8d, word ptr [rsi+0Ch]" />
		<Instruction code="41 8D 56 03" comment="lea edx, [r14+3]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 0E" comment="movsx r8d, word ptr [rsi+0Eh]" />
		<Instruction code="41 8D 56 04" comment="lea edx, [r14+4]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 10" comment="movsx r8d, word ptr [rsi+10h]" />
		<Instruction code="41 8D 56 05" comment="lea edx, [r14+5]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 0F BF 46 12" comment="movsx r8d, word ptr [rsi+12h]" />
		<Instruction code="41 8D 56 06" comment="lea edx, [r14+6]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 14" comment="mov r8d, [rsi+14h]" />
		<Instruction code="41 8D 56 07" comment="lea edx, [r14+7]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 18" comment="mov r8d, [rsi+18h]" />
		<Instruction code="41 8D 56 08" comment="lea edx, [r14+8]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 1C" comment="mov r8d, [rsi+1Ch]" />
		<Instruction code="41 8D 56 09" comment="lea edx, [r14+9]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="44 8B 46 20" comment="mov r8d, [rsi+20h]" />
		<Instruction code="41 8D 56 0A" comment="lea edx, [r14+A]" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		<Instruction code="41 8D 56 0B" comment="lea edx, [r14+B]" />
		<Instruction code="44 8B C7" comment="mov r8d, edi" />
		<Instruction code="49 8B CF" comment="mov rcx, r15" />
		<Instruction code="E8 XXXXXXXX" comment="call send_method2" />
		
		<Hook type="call" inst_index="53" value="PatchReceiveType_CharacterTableStart" />	
	</Patch>
	
	<!-- Patch added in 1.10v2. Signature 1.14 -->
	<Patch name="NoNewStarIconInCharsAfter160" type="write" search_start="0x7477AE" >
		<Instruction code="41 8B C2" comment="mov eax, r10d" />
		<Instruction code="8B D0" comment="mov edx, eax" />
		<Instruction code="41 8B C9" comment="mov ecx, r9d" />
		<Instruction code="C1 E2 06" comment="shl edx, 6" />
		<Instruction code="2B CA" comment="sub ecx, edx" />
		<Instruction code="44 0F B6 C1" comment="mov r8d, cl" />
		<Instruction code="8B C8" comment="mov ecx, eax" />
		<Instruction code="49 8B 94 CB 70 05 00 00" comment="mov rdx, [r11+rcx*8+570h]" />
		<Instruction code="4C 0F A3 C2" comment="bt rdx, r8" />
		<Instruction code="41 0F 92 C2" comment="setb r10" />
		<Instruction code="41 8B C2" comment="mov eax, r10d" />
		<Instruction code="C3" comment="ret" />
		<Instruction code="33 C0" comment="xor eax, eax" />
		
		<!-- Replace the xor eax, eax, with a mov eax, edx. Since edx is guaranteed to be >= 160, it is non-zero, thus condition reverted -->
		<Write inst_index="12" value="89 D0" />
	</Patch>
	
	<!-- Signature updated in 1.15 -->
	<Patch name="PatchReceiveTypeNum" type="notify" search_start="0x578312" comment="Takes place in chasel_ctor." >
		<Instruction code="41 B8 4E 2F 00 00" comment="mov r8d, 2F4Eh; r8d = ReceiveType_Num" />
		<Instruction code="E8 XXXXXXXX" comment="call base::ctor" />
		<Instruction code="90" comment="nop" />
		<Instruction code="48 8D 05 XX XX XX XX" comment="lea rax, chasel_vtable" />
		<Instruction code="48 89 07" comment="mov [rdi], rax; this->vtable = chasel_vtable" />
		<Instruction code="48 8D 8F F0 01 00 00" comment="lea rcx, [rdi+1F0h]" />
		
		<Notify inst_index="0" inst_offset="2" value="PatchReceiveTypeNum" />		
	</Patch>
	
<!-- Part 2: modifying the C++ object layout 

(Note: part of the info in this comment may be outdated)

The object that takes care about Character Selection in the native side is a C++ object with an allocation size of 0x18B0 bytes.
The object has +29 methods (4 of them virtual), including the constructor and the virtual destructor.
The count doesn't include the methods of base classes (virtual methods or not), which are numerous (the object is estimated to be 
***at least*** the third one in the hierarchy)

Object layout:
Offset 0 -> vtable pointer
4-1AF -> base classes properties
1B0-18BF -> this class properties

The most important field for our purposes is the one located at offset 0x5E0. 
The field there is a fixed array of ***128*** structures/objects, each one being 32 bytes (so the field takes the range 0x5E0-0x15DF).

Because the array size is the default number of max slots (128), we need to increase this field somehow to match our new number of slots.
There are two ways to solve this:

- Method 1: increase the space for the fixed array, by displacing all other fields offsets (and also increasing the C++ object memory)
Pros: it will only use the memory needed, not a single byte wasted.
Cons: this would require an insane amount of patches, as all fields offset accesses >= 13D8 would have to be modified. It would be difficult 
to maintain, and too prone to errors.

- Method 2: After increasing the C++ object memory, reallocate the fixed array to the old end (to offset 0x18C0), and fix its references,
leaving the space 0x5E0-0x15DF as dead/unused.

- Pros: much easier and faster to implement than 1. More safe because it is less prone to mistakess.
- Cons: ~3KB of memory will be wasted.

Method 2 will be used. Its simplicity well worths to waste 3K of memory.

Half of the implementation can be done in the xml. Only the C++ object increase, and array resize must be done in the .dll because the new size must be computed at runtime.

-->

	<!-- Signature updated in 1.11 -->
	<!-- Don't forget to update the size in the dll code too on signature change -->
	<Patch name="IncreaseChaselMemory" type="notify" search_start="0x3CDF1F" >
		<Instruction code="45 33 C9" comment="xor r9d, r9d" />
		<Instruction code="41 83 C8 FF" comment="or r8d, 0FFFFFFFFh" />
		<Instruction code="33 D2" comment="xor edx, edx" />
		<Instruction code="B9 C0180000" comment="mov ecx, 18C0h" />
		<Instruction code="FF 15 XXXXXXXX" comment="call operator new" />
		<Instruction code="4C 8B D0" comment="mov r10, rax" />
		
		<Notify inst_index="3" inst_offset="1" value="IncreaseChaselMemory" />
	</Patch>
	
	<!-- Signature updated in 1.10v2 -->
	<Patch name="IncreaseChaselSlotsArray" type="hook" search_start="0x52CFF9" comment="Takes place in chasel_ctor." >
		<Instruction code="48 8D 8F E0 05 00 00" comment="lea rcx, [rdi+5E0h]" />
		<Instruction code="4C 89 6C 24 20" comment="mov [rsp+20h], r13" />
		<Instruction code="4C 8D 0D XXXXXXXX" comment="lea r9, some_function_ptr" />
		<Instruction code="BA 20 00 00 00" comment="mov edx, 20h" />
		<Instruction code="44 8D 42 60" comment="lea r8d, [rdx+60h]; 0x20+0x60=0x80=128 decimal" />
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		
		<Hook type="call" inst_index="5" value="IncreaseChaselSlotsArray" setup="SetupIncreaseChaselSlotsArray" />
	</Patch>
	
	<!-- Signature updated in 1.10v2-->
	<Patch name="IncreaseChaselSlotsArray2" type="hook" search_start="0x52D967" comment="Takes place in chasel_func15, the function with most of the destructor implementation." >
		<Instruction code="48 8D 8F E0 05 00 00" comment="lea rcx, [rdi+5E0h]" />
		<Instruction code="4C 8D 0D XXXXXXXX" comment="lea r9, some_function_ptr" />
		<Instruction code="BA 20 00 00 00" comment="mov edx, 20h" />
		<Instruction code="44 8D 42 60" comment="lea r8d, [rdx+60h]; 0x20+0x60=0x80=128 decimal" />
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="90" comment="nop" />
		
		<Hook type="call" inst_index="4" value="IncreaseChaselSlotsArray2" setup="SetupIncreaseChaselSlotsArray2" />
	</Patch>
	
	<!-- The following two patches signature are identical to the above two one, that is not an error -->
	<Patch name="ModifyArrayOffset1" type="write" search_start="0x52CFF9" comment="Takes place in chasel_ctor." >
		<Instruction code="48 8D 8F E0 05 00 00" comment="lea rcx, [rdi+5E0h]" />
		<Instruction code="4C 89 6C 24 20" comment="mov [rsp+20h], r13" />
		<Instruction code="4C 8D 0D XXXXXXXX" comment="lea r9, some_function_ptr" />
		<Instruction code="BA 20 00 00 00" comment="mov edx, 20h" />
		<Instruction code="44 8D 42 60" comment="lea r8d, [rdx+60h]; 0x20+0x60=0x80=128 decimal" />
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		
		<Write inst_index="0" inst_offset="3" value="C0 18" />
	</Patch>
	
	<Patch name="ModifyArrayOffset2" type="write" search_start="0x52D967" comment="Takes place in chasel_func15, the function with most of the destructor implementation." >
		<Instruction code="48 8D 8F E0 05 00 00" comment="lea rcx, [rdi+5E0h]" />
		<Instruction code="4C 8D 0D XXXXXXXX" comment="lea r9, some_function_ptr" />
		<Instruction code="BA 20 00 00 00" comment="mov edx, 20h" />
		<Instruction code="44 8D 42 60" comment="lea r8d, [rdx+60h]; 0x20+0x60=0x80=128 decimal" />
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="90" comment="nop" />
		
		<Write inst_index="0" inst_offset="3" value="C0 18" />
	</Patch>
	
	<!-- Signature updated in 1.11 -->
	<Patch name="ModifyArrayOffset3_Multi" type="write" search_start="0x545A8D" comment="Takes place in chasel_func5." >
		<Instruction code="48 8D 96 E0 05 00 00" comment="lea rdx, [rsi+5E0h]" />
		<Instruction code="49 8B DE" comment="mov rbx, r14" />
		<Instruction code="89 6C 24 28" comment="mov [rsp+28h], ebp" />
		<Instruction code="48 C1 E3 05" comment="shl rbx, 5" />
		<Instruction code="48 8D 8E 10 18 00 00" comment="lea rcx, [rsi+1810h]" />
		<Instruction code="48 03 D3" comment="add rdx, rbx" />
		<Instruction code="48 C7 44 24 20 00 00 00 00" comment="mov qword ptr[rsp+20h], 0" />
		<Instruction code="45 33 C0" comment="xor r8d, r8d" />
		<Instruction code="E8 XXXXXXXX" comment="call XXXXXXXX" />
		<Instruction code="48 83 BC 33 F0 05 00 00 00" comment="cmp qword ptr [rbx+rsi+5F0h], 0" />
		
		<Write value="XXXXXXC0180000 XXXXXX XXXXXXXX XXXXXXXX XXXXXXXXXXXXXX XXXXXX XXXXXXXXXXXXXXXXXX XXXXXX XXXXXXXXXX XXXXXXXXD018"  /> 
	</Patch>
	
	<!-- Added in version 1.10v2. 
	     This patch exists because their compiler wrote 0x5E0, as 0x2F << 5. This patch is likely to be gone in the future if the address (0x5E0) changes and
	     compiler is unable to do such fancy things with other number -_-  
		 
		 While this patch exists, remember to update the reference to the size of the chasel object in chara_patch_asm.S too
	-->
	<Patch name="ModifyArrayOffset4" type="notify" search_start="0x530FC5" comment="Takes place in chasel_func5, just after ModifyArrayOffset3_Multi">
		<Instruction code="4D 8D 46 2F" comment="lea r8, [r14+2Fh]" />
		<Instruction code="49 C1 E0 05" comment="shl r8, 5" />
		<Instruction code="4C 03 C6" comment="add r8, rsi" />
		<Instruction code="49 83 78 18 08" comment="cmp qword ptr [r8+18h], 8" />
		<Instruction code="72 03" comment="jb +3" />
		
		<Notify value="ModifyArrayOffset4" />
	</Patch>
	
</EternityPatchFile>